<!DOCTYPE html>
<!--[if lt IE 7]>
<html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>
<html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>
<html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js"> <!--<![endif]-->
<head>
    <meta charset="UTF-8">
    <style></style>
</head>
<body>
<!--[if lte IE 8]>
<div class="m-browsehappy">
    <div class="browsehappy-inner">
        <h3 class="title">对不起！<br>您的浏览器版本太低，请升级你的浏览器</h3>

        <p class="suggest">建议使用：</p>

        <p class="brower">
            <span class="item">
                <a class="ie image" href="https://www.microsoft.com/en-us/download/internet-explorer.aspx" target="_blank" title="下载Internet Explorer浏览器"></a>
                <b class="text">ie9+</b>
            </span>
            <span class="item">
                <a class="chrome image" href="http://www.google.cn/intl/zh-CN/chrome/browser/?spm=1.7274553.0.0.benzR1" target="_blank" title="下载Chrome浏览器"></a>
                <b class="text">chrome</b>
            </span>
        </p>

        <p class="from">--来自看云官方</p>
        <b class="browsehappy-arrow"></b>
    </div>
</div>
<script>
    window.nonsupportIE = true;
</script>
<![endif]-->
<div class="m-manual manual-reader" data-id="3036" data-title="HTTP 下午茶" data-desc="每当打开浏览器就会用到 http 协议，网站开发者怎能不会 http？ 本书将为你阐明这套协议的骨干精髓，程序员必备枕边小书。

本书是 Tealeaf Academy Introduction to HTTP 一书的中文翻译。" data-basepath="http://www.kancloud.cn" data-article-id="43839">
    <div class="manual-head">
        <div class="left">
            <a class="manual-title" href="http://www.kancloud.cn/kancloud/tealeaf-http" title="返回文档首页">
                <b class="text">HTTP 下午茶</b>
            </a>
        </div>
        <div style="display: none;">
            <img src="http://box.kancloud.cn/cover_2015-07-17_55a8a3f18aee_800x1068.jpg?imageMogr2/thumbnail/300x400!/interlace/1/quality/100" />
        </div>
    </div>
    <div class="manual-body">
        <div class="manual-left">
            <div class="manual-tab">
                <div class="tab-navg">
                    <span data-mode="view" class="navg-item active"><i class="icon icon-menu"></i><b class="text">目录</b></span>
                    <span data-mode="search" class="navg-item"><i class="icon icon-search"></i><b class="text">搜索</b></span>
                </div>
                <div class="tab-util">
                    <span class="manual-fullscreen-switch">
                        <b class="open icon-chevron-right" title="展开"></b>
                        <b class="close icon-chevron-left" title="关闭"></b>
                    </span>
                </div>
                <div class="tab-wrap">
                    <div class="tab-item manual-catalog">
                        <div class="catalog-list read-book-preview">
                            <a href="/kancloud/tealeaf-http/43837" data-pid="0" data-disable="0" data-id="43837">前言</a><a href="/kancloud/tealeaf-http/43831" data-pid="0" data-disable="0" data-id="43831">背景知识</a><a href="/kancloud/tealeaf-http/43835" data-pid="43831" data-disable="0" data-id="43835">简介</a><a href="/kancloud/tealeaf-http/43832" data-pid="43831" data-disable="0" data-id="43832">背景</a><a href="/kancloud/tealeaf-http/43842" data-pid="43831" data-disable="0" data-id="43842">什么是URL</a><a href="/kancloud/tealeaf-http/43838" data-pid="43831" data-disable="0" data-id="43838">准备工作</a><a href="/kancloud/tealeaf-http/43834" data-pid="0" data-disable="0" data-id="43834">HTTP</a><a href="/kancloud/tealeaf-http/43836" data-pid="43834" data-disable="0" data-id="43836">发起请求</a><a href="/kancloud/tealeaf-http/43839" data-pid="43834" data-disable="0" data-id="43839">处理响应</a><a href="/kancloud/tealeaf-http/43841" data-pid="43834" data-disable="0" data-id="43841">有状态的WEB应用</a><a href="/kancloud/tealeaf-http/43840" data-pid="43834" data-disable="0" data-id="43840">安全性</a><a href="/kancloud/tealeaf-http/43833" data-pid="0" data-disable="0" data-id="43833">结语与期望</a>                        </div>
                    </div>
                    <div class="tab-item manual-search">
                        <div class="search-inner">
                            <div class="search-form">
                                <form class="w-search" onsubmit="return false;" method="post" autocomplete="off">
                                    <label class="w-text text-m text-full search-enter"><input class="text-input" type="text" name="keyword" placeholder="请输入搜索关键词..."></label>
                                    <input type="hidden" name="book_id" value="3036">
                                    <button class="search-btn icon-search" type="submit"></button>
                                </form>
                            </div>
                            <div class="search-result"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="m-copyright">
                <p>
                                        本文档使用
                    <a href="http://www.kancloud.cn" target="_blank" onclick="window.open('http://www.kancloud.cn')">看云</a> 发布
                </p>
            </div>
        </div>
        <div class="manual-right">
            <div class="m-article">
                <div class="article-head">
                    <div class="head-tool">
                        <div class="item font-setting w-drop drop-hover">
                            <span class="drop-show"><i class="icon icon-font"></i><b class="text">文字</b></span>
                            <div class="drop-hide drop-hide-left">
                                <b class="drop-arrow-outer"><i class="drop-arrow-inner"></i></b>

                                <div class="drop-hide-inner">
                                    <div class="buttons size-list">
                                        <button type="button" id="reduce-font-size" class="button size-2">A</button>
                                        <button type="button" id="enlarge-font-size" class="button size-2">A</button>
                                    </div>
                                    <div class="buttons theme-list">
                                        <button type="button" id="color-theme-preview-0" class="button size-3" data-theme="0">默认</button>
                                        <button type="button" id="color-theme-preview-1" class="button size-3" data-theme="1">护眼</button>
                                        <button type="button" id="color-theme-preview-2" class="button size-3" data-theme="2">夜间</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="head-util">

                    </div>
                    <h1></h1>
                </div>
                <div class="article-wrap">
                    <div class="article-view">
                        <div class="view-body think-editor-content">
                            <h2>简介</h2>
<p>目前为止我们已经发起了各种各样的请求，也看到了服务器发回的原始 HTTP 数据。服务器返回的原始数据就是所谓的<strong>响应</strong>。本章我们会分析 HTTP 响应里的各种组成部分。</p>
<h2>状态码</h2>
<p>我们要看的第一个组成部分是 HTTP 状态码.<code>状态码</code>是服务器接收到请求后返回的标识请求状态的三位数.在<code>状态码</code>的旁边，就是描述这个状态码的<code>状态文本</code>.一般这些出现在审查器的<code>Status</code>这列:<img src="http://happypeter.github.io/tealeaf-http/images/status_inspector.png" alt="status" /></p>
<p>你遇到的最常见的响应状态码应该是 200，意思是请求被正确处理.让我们来看看其他有用的状态码:</p>
<table><thead><tr><th>状态码</th>
<th>状态文本</th>
<th>含义</th>
</tr></thead><tbody><tr><td>200</td>
<td>OK</td>
<td>请求被正确处理</td>
</tr><tr><td>302</td>
<td>Found</td>
<td>所请求的资源已暂时更改.通常会重定向到另一个 URL</td>
</tr><tr><td>404</td>
<td>Not Found</td>
<td>所请求的资源无法找到</td>
</tr><tr><td>500</td>
<td>Internal Server Error</td>
<td>服务器出现一般性错误</td>
</tr></tbody></table><p>作为一个 web 开发者，你应该熟知上面的响应状态码和其代表的含义。</p>
<p>让我们来挨个举例看看:</p>
<h2>302 Redirect（重定向）</h2>
<p>当一个资源的位置移动了会发生什么呢？ 最通用的解决方案是把对旧 URL 的请求重新引导到新 URL 上.这种重新引导请求的行为有一个术语叫<code>重定向</code>（ redirect ）。当你的浏览器看到一个 302 响应状态码的时候，他就知道这个资源已经移动到别处了，然后就会自动跳转到 <code>Location</code> 响应头部里指定的 URL 。在本节中，我们会用浏览器和 HTTP 工具来演示重定向。</p>
<p>比如说你想要看 <a href="http://www.github.com/">GitHub</a> 上的账户配置，你就要访问这个链接 <code>https://github.com/settings/profile</code> 。但是，要有访问账户配置页面的权限，你必须先登录。如果你没有登录就访问这个链接，浏览器会把你送到登录页面去。当你填写正确的登录信息后，你就会被重定向到你最早想访问的页面。这个是大多数 web 应用的通用工作流程。让我们看看浏览器和 HTTP 工具是怎么处理这个流程的。</p>
<p>首先你在浏览器里输入 <code>https://github.com/settings/profile</code> 。</p>
<p>因为浏览器很聪明，它会直接按照重定向的指示给你展示出 GitHub 的登录页面:<img src="http://happypeter.github.io/tealeaf-http/images/browser_302_redirect.png" alt="github_signin" /></p>
<p>相比之下我们来看看 HTTP 工具 （注意状态码），它并没有自动跟进重定向:<img src="http://happypeter.github.io/tealeaf-http/images/http_tool_302_redirect.png" alt="paw_302" /></p>
<p>注意这个 <code>Location</code> 响应头部（有点难找到，在第 12 行）。你应该能看到</p>
<pre><code>Location: https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fsettings%2Fprofile</code></pre>
<p>这个 URL 里有一个 _return<em>to</em> 参数，它的值就是在登录之后客户端要重定向到的 URL。对比一下浏览器里那张图，你应该能发现，这个 URL 和浏览器地址栏里的 URL 是一样的。</p>
<h2>404 Not Found（未找到）</h2>
<p>接下来，我们看看浏览器里的 404 响应状态码是什么样。当所请求的资源没有找到的时候，服务器会返回这个状态码。要记得，资源可以是任何东西，包括音频文件，CSS 文件，javascript 文件，图片等等。让我们给<code>http://www.dropbox.com</code> 发一个 <code>GET</code> 请求索要一张图片，<code>https://www.dropbox.com/awesome_file.jpg</code>:<img src="http://happypeter.github.io/tealeaf-http/images/dropbox_404.png" alt="404" /></p>
<p>我们看到了 Dropbox 那漂亮的 404 页面。现在让我们在 HTTP 工具里看看同样的请求的响应:<img src="http://happypeter.github.io/tealeaf-http/images/dropbox_httptool_404.png" alt="paw_404" /></p>
<p>因为我们索要的资源并不存在，浏览器给我们展示了一个格式友好的文字提示，但 HTTP 工具会给我们展示响应状态码和原始响应数据。</p>
<h2>500 Internal Server Error（内部服务器错误）</h2>
<p>一个 500 状态码意思就是'服务器那儿好像出了点儿问题'。 这只是一个一般性的错误状态码，造成这个错误的原因可能是服务器配置，也可能是跑在服务器上的应用里的代码少写个逗号。但是不管是什么问题，总之是服务器端有问题。有服务器访问权限的人必须去调试和解决这个问题，这就是为什么很多含糊的报错信息都会提醒你去联系你的系统管理员。在实际应用上，500 错误也可以像 404 那样以多种多样的形式显示出来。下面就是 rails 应用默认的 500 页面：<img src="http://happypeter.github.io/tealeaf-http/images/browser_500.png" alt="rails_500" /></p>
<p>使用 HTTP 工具，我们能看到状态码和原始数据：<img src="http://happypeter.github.io/tealeaf-http/images/http_tool_500.png" alt="paw_500" /></p>
<h2>响应头部</h2>
<p>跟请求头部一样，我们也可以用审查器去看响应头部：<img src="http://happypeter.github.io/tealeaf-http/images/http_response_headers.png" alt="res_head" /></p>
<p>响应头部提供了更多关于服务器返回的资源的信息。让我们来看看一些常见的响应头部:</p>
<table><thead><tr><th>头部名称</th>
<th>描述</th>
<th>举例</th>
</tr></thead><tbody><tr><td>Content-Encoding</td>
<td>数据的编码类型</td>
<td>Content-Encoding: gzip</td>
</tr><tr><td>Server</td>
<td>服务器的名称</td>
<td>Server:thin 1.5.0 codename Knife</td>
</tr><tr><td>Location</td>
<td>通知客户端新的资源位置</td>
<td>Location: <a href="http://www.github.com/login"></a><a href="http://www.github.com/login">http://www.github.com/login</a></td>
</tr><tr><td>Content-Type</td>
<td>响应数据的类型</td>
<td>Content-Type:text/html; charset=UTF-8</td>
</tr></tbody></table><p>还有很多响应头部，但是跟请求头部一样，没有必要去背下来。 响应头部对返回的数据有着微妙的影响，有些情况下，它们巧妙的用于工作流程中（比如，你的浏览器自动跟进 <code>Location</code> 响应头部指向的 URL ）。你需要理解的仅仅是，响应头部包含了一些关于返回的响应数据的额外信息（译注：描述数据的信息/数据，通常被称为为元数据，meta-data or meta information ）。</p>
<h2>小结</h2>
<p>在本章，我们讨论了 HTTP 响应的组成部分。我们也了解了如何使用审查器去查看 HTTP 响应的头部。尽管我们只是揭开了 HTTP 协议面纱的一角，我希望这些知识在你需要的时候能给你 <a href="http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol">深入研究 HTTP</a> 的能力。</p>
<p>总之，我们已经看到，HTTP 只不过是一个协议，用于指示客户端与服务器之间如何使用某种格式的文本进行通信。</p>
<p>HTTP 响应中最重要的部分如下:</p>
<ul><li>状态码</li>
<li>头部</li>
<li>消息正文，里面有原始响应数据</li>
</ul><p>试试看，在下面这个图里你能不能找到上面那几个部分都在哪儿:</p>
<p><img src="http://happypeter.github.io/tealeaf-http/images/request_http_tool.png" alt="raw_data" /></p>                        </div>
                        <div class="view-foot">
                            <div class="article-jump">
                                <span class="jump-up">上一篇：<a></a></span>
                                <span class="jump-down">下一篇：<a></a></span>
                            </div>
                            <a class="view-backtop"><i class="icon-arrow-up2"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="think-loading loading-gear loading-active">
    <span class="loading-inner">
        <i class="loading-image">&nbsp;</i>
        <b class="loading-text">页面正在加载中</b>
    </span>
</div>
<script src="http://static.kancloud.cn/Static/component/seajs/dist/sea.js"></script>
<script>
    seajs.config({
        base   : "http://static.kancloud.cn/Static/",
        paths  : {
            'home'     : 'home/script',
            'common'   : 'common/script',
            'document' : 'document/script',
            'component': 'component'
        },
        preload : [
            'jquery'
        ],
        alias: {
            'jquery':'component/jquery',
            'config': 'common/module/config'
        },
        map    : [
            [/^(.*\.(?:css|js))(.*)$/i, '$1?v=20160622001']
        ],
        debug  : true
    });
</script>
<script src="http://static.kancloud.cn/Static/home/dist/app.min.js?v=20160622001"></script>
    <script src="http://static.kancloud.cn/Static/document/dist/kancloud.min.js?v=20160622001"></script><script>
    seajs.use('config', function (config) {
        //设置项目配置
        config.set({
            "ROOT"  : "", //当前网站地址
            "APP"   : "", //当前项目地址
            "STATIC": "http://static.kancloud.cn/Static", //静态资源文件地址
            "PUBLIC": "http://static.kancloud.cn/Static" //home目录地址
        });
        seajs.use('home/globle', function (globle) {
            //启动页面脚本
            if(globle!==false) {
                seajs.use('document/kancloud', function (kancloud) {
                    kancloud.start({"plugins":["highlight"],"comment":true,"collect":true,"cover":"http:\/\/box.kancloud.cn\/cover_2015-07-17_55a8a3f18aee_800x1068.jpg?imageMogr2\/thumbnail\/231x273!\/interlace\/1\/quality\/100","sharing":true,"login":true});
                });
            }
        });
    });
</script>

</body>
</html>
